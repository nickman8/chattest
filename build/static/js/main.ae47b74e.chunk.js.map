{"version":3,"sources":["ChatMessage/ChatMessage.js","chatRedux/socket.js","Preview/Preview.js","forwardCounter/ForwardCounter.js","ChatArea/ChatArea.js","ChatInput/ChatInput.js","Chatroom/chatroom.js","Auth/Auth.js","App.js","chatRedux/redux.js","chatRedux/store.js","chatRedux/middle.js","index.js"],"names":["ChatMessage","props","name","messages","id","event","this","addToMessageArray","text","message","img","deleteMessageFromState","className","clientName","console","log","chooseMod","onClick","setForwardOn","src","SetChooseMod","FormControlLabel","control","Checkbox","icon","fontSize","checkedIcon","e","sendMessageToState","target","checked","Object","entries","length","map","element","key","image","path","alt","quote","React","Component","SocketSlice","createSlice","initialState","roomListArray","token","localStorage","getItem","socketUrl","reducers","roomList","state","action","payload","list","forEach","push","Array","from","Set","newUserConnected","Date","now","sendMsg","accept","setItem","OnAuth","OffAuth","auth","userDisconnected","filter","item","index","newMsg","msg","actions","Preview","oneMessage","setForwardOff","ForwardCounter","defaultProps","bgcolor","border","style","height","overflow","ChatArea","ref","createRef","scroll","toTop","document","querySelector","scrollTop","scrollHeight","toString","Box","myRef","borderColor","getDate","messagesArray","forward","connect","socket","dispatch","ChatInput","changeName","open","formName","value","disabled","removeItem","window","location","reload","forceUpdate","setState","loading","test","setTimeout","preventDefault","file","files","mes","func","addMessage","imageObj","messageArray","formData","FormData","append","undefined","axios","post","headers","then","result","data","catch","ex","finally","keys","alert","forwardOff","clearMessages","onSubmit","sumbitHandler","bind","TextField","label","onChange","type","multiple","htmlFor","IconButton","color","aria-label","component","Button","variant","endIcon","Icon","handleClickOpen","Dialog","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","delete","DialogActions","picture","randomInteger","rand","Math","random","round","elem","storageFunc","textAlign","url","useState","storage","setStorage","setForward","setOneMessage","SetMessagesArray","SetChooseModFunc","Container","width","old","MessageSlice","socketIoMiddleware","criteria","eventName","execute","emit","getState","on","next","send","createSocketIoMiddleware","io","store","configureStore","reducer","messageReducer","socketReducer","middleware","getDefaultMiddleware","concat","subscribe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae47b74e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./message.css\";\nimport Zoom from \"react-medium-image-zoom\";\nimport \"react-medium-image-zoom/dist/styles.css\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nclass ChatMessage extends React.Component {\n  constructor(props) {\n    super();\n    this.name = props.name;\n    this.messages = props.messages;\n    this.id = props.id()\n  }\n\n  sendMessageToState (event){\n    if(event){\n      //console.log(this.props)\n      this.props.addToMessageArray({name:this.props.name,text:this.props.message.text,img:this.props.message.img, id:this.id })\n    }else{\n      this.props.deleteMessageFromState({name:this.props.name,text:this.props.message.text, id:this.id })\n    }\n  }\n\n \n\n  render() {\n    \n    return (\n      <div className={this.props.clientName == this.name ? \"message flex-end\":\"message flex-start\" }>\n        {console.log(this.props)}\n        {console.log(this.name)}\n        <div className ={this.props.clientName == this.name ? \"my-chat-message\":\"chat-message\" } >\n          {this.name === \"ADMIN\" ? (\n            <strong>\n              {\" \"}\n              <span >{this.name}: </span>{\" \"}\n            </strong>\n          ) : (\n            <span className = \"chat-name\">{this.name}: </span>\n          )}\n          {this.name === \"ADMIN\" ? (\n            <strong>\n              {\" \"}\n              <span>&nbsp; {this.props.message.text} </span>{\" \"}\n            </strong>\n          ) : (\n            <span className = \"chat-text\">&nbsp; {this.props.message.text} </span>\n          )}\n          {!this.props.chooseMod && (<img\n            onClick={() =>this.props.setForwardOn(this.name, this.props.message.text, this.props.message.img)\n            }\n            className=\"forward-arrow\"\n            src=\"./forward-arrow.png\"\n          ></img>)}\n          {!this.props.chooseMod && (<img\n            onClick={this.props.SetChooseMod\n            }\n            className=\"forward-arrow\"\n            src=\"./384288-200.png\"\n          ></img>)}\n          \n          {this.props.chooseMod && <FormControlLabel\n        control={\n          <Checkbox\n            className=\"chat-message-checkbox\"\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n            name=\"checkedI\"\n            onClick={e=>{this.sendMessageToState(e.target.checked)}}\n          />\n          \n        } \n        \n             \n      />}\n      {this.props.chooseMod && (<img\n            onClick={this.props.SetChooseMod\n            }\n            className=\"cancel-button\"\n            src=\"./cancel.png\"\n          ></img>)}  \n      \n          {/* <span>&nbsp; {this.props.message.text} </span> */}\n        </div >\n        \n        {Object.entries(this.props.message.img).length != 0 ? (\n          <div >\n            {\" \"}\n            <i>Прикрепленные файлы:</i>{\" \"}\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"flex\">\n          {Object.entries(this.props.message.img).length != 0\n            ? this.props.message.img.map((element) => {                \n                return (\n                  <Zoom>\n                    <img\n                      key={element.id}\n                      className=\"img\"\n                      src={element.image.path}\n                      alt=\"ChatImage\"\n                    ></img>\n                  </Zoom>\n                );\n              })\n            : \"\"}\n          </div>  \n          {this.props.message.quote.length != 0 ? this.props.message.quote.map((element)=>{\n            return (\n              <div className= \"quote\">\n               <div> \n                <span className =\"quote-title\"> \nQuoted post: </span>\n                <span className =\"quote-name\"> Name: {element.name} </span>\n                <span className =\"quote-text\"> {element.text} </span>\n                </div> \n                {Object.entries(element.img).length != 0\n            ? element.img.map((image) => {                \n                return (\n                  <Zoom>\n                    <img\n                      key={image.id}\n                      className=\"img\"\n                      src={image.image.path}\n                      alt=\"ChatImage\"\n                    ></img>\n                  </Zoom>\n                );\n              })\n            : \"\"}\n              </div>\n            )\n          }): \"\" }\n        </div>\n      \n    );\n  }\n}\nexport default ChatMessage;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst SocketSlice = createSlice({\n  name: \"socket\",\n  initialState: {\n    clientName: \"\",\n    messages: [],\n    roomListArray: [],\n    token: localStorage.getItem(\"token\"),  \n    socketUrl : \"http://localhost:3001\" \n     \n  },\n  reducers: {\n    //connected: (state, action) => {\n    //  state = { ...state, clientName: action.payload.clientName };\n    //},\n    roomList: (state, action) => {\n      action.payload.list.forEach((element) => {\n        state.roomListArray.push(element);\n      });\n      state.roomListArray = Array.from(new Set(state.roomListArray));\n    },\n    newUserConnected: (state, action) => {\n      //state.clientName = action.payload.clientName;\n      state.messages.push({\n        name: \"ADMIN\",\n        id: Date.now(),\n        message: {\n          text: `${action.payload.clientName} joined the chat`,\n          img: {},\n          quote:[]\n        },\n      });\n    },\n    sendMsg: (state, action) => {},\n    accept: (state,action)=>{\n      //console.log(action.payload)\n      state = { ...state, clientName: action.payload.clientName };\n      state = { ...state, token: action.payload.token };\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"clientName\", action.payload.clientName);\n      //console.log(state.clientName)\n      //console.log(state)\n      return state\n    },\n    OnAuth: (state, action) => {\n      //console.log(action.payload.token)\n      state = {...state, token: action.payload.token}\n\n      state.token = action.payload.token;\n      //console.log(state)\n    },\n    OffAuth: (state,action)=>{\n      //console.log(\"я тут\")\n      state = {...state, token: \"\"}\n    },\n    auth : (state,action)=>{\n      \n    },\n    userDisconnected: (state, action) => {\n      state.roomListArray = state.roomListArray.filter(\n        (item, index) => item != action.payload.clientName\n      );\n\n      state.messages.push({\n        name: \"ADMIN\",\n\n        id: Date.now(),\n        message: {\n          text: `${action.payload.clientName} left the chat`,\n          img: {},\n          quote:[]\n        },\n      });\n    },\n    newMsg: (state, action) => {\n      state.messages.push({\n        name: action.payload.clientName,\n\n        id: Date.now(),\n        message: action.payload.msg,\n      });\n    },\n  },\n});\n\nexport const { sendMsg, OnAuth, OffAuth, auth} = SocketSlice.actions;\nexport default SocketSlice.reducer;\n","import React from \"react\";\nimport \"./preview.css\";\nimport Zoom from \"react-medium-image-zoom\";\n\nfunction Preview(props) {\n  function ImageCounter(imgCount) {\n    if (imgCount != 0) {\n      return (\n        <div className=\"preview-counter\">          \n          {imgCount}\n        </div>\n      );\n    }\n  }\n\n  console.log(props.oneMessage);\n  return (\n    <div className=\"preview \">\n      <div>\n        <h4 className=\"quoted-title\">\n          Quoted message from {props.oneMessage.name}\n        </h4>\n        <span className = \"preview-text\"> {props.oneMessage.text}</span>\n      </div>\n    {props.oneMessage.img.length !=0 && (\n        <div className=\"preview-counter\">          \n          {props.oneMessage.img.length}\n        </div>\n      )}\n      \n     {/*  <ImageCounter imgCount={props.oneMessage.img.length} /> */}\n\n      <img\n        onClick={props.setForwardOff}\n        className=\"preview-close\"\n        src=\"./close.png\"\n      ></img>\n    </div>\n  );\n}\nexport default Preview;\n","import React from \"react\";\nimport \"./ForwardCounter.css\"\n\nfunction ForwardCounter(props) {\n  return (\n    <div>\n      <div className=\"preview-counter forward-counter\">{props.length}</div>\n    </div>\n  );\n}\n\nexport default ForwardCounter;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport ChatMessage from \"../ChatMessage/ChatMessage\";\nimport { connect } from \"react-redux\";\nimport \"./chatarea.css\";\nimport {auth} from \"../chatRedux/socket\"\nimport Preview from \"../Preview/Preview\";\nimport ForwardCounter from \"../forwardCounter/ForwardCounter\";\n\nconst defaultProps = {\n  bgcolor: \"background.paper\",\n  border: 1,\n  style: { height: \"25rem\" },\n  overflow: \"auto\",\n};\nclass ChatArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ref = React.createRef();\n    this.scroll = React.createRef();\n    this.toTop = function () {\n      const element = document.querySelector(\".MuiBox-root\");\n      element.scrollTop = element.scrollHeight;\n    };\n    this.state = {quote:\"false\"}\n  }\n\n  componentDidMount(){\n    if(localStorage.getItem(\"token\") ){\n      this.props.auth()\n    }\n    \n  }\n\n  componentDidUpdate() {\n    /* const element = document.querySelector(\".MuiBox-root\");\n    element.addEventListener(\"scroll\", () => {\n      if (element.scrollTop + element.clientHeight != element.scrollHeight) {\n        document.querySelector(\".scroll-down\").classList.remove(\"none\");\n      } else {\n        document.querySelector(\".scroll-down\").classList.add(\"none\");\n      }\n    });\n    element.addEventListener(\"DOMNodeInserted\", () => {\n      if (element.scrollTop + element.clientHeight != element.scrollHeight) {\n        document.querySelector(\".scroll-down\").classList.remove(\"none\");\n      } else {\n        document.querySelector(\".scroll-down\").classList.add(\"none\");\n      }\n    }); */\n  }\n  getDate(){\n    return Date.now().toString()\n  }\n\n  render() {\n    return (\n      <div>\n        <Box\n          className=\"chat-box\"\n          ref={this.myRef}\n          borderColor=\"primary.main\"\n          {...defaultProps}\n        >\n          <div>\n{/*           <img\n            id=\"scroll\"\n            className=\"scroll-down none\"\n            src=\"./icons8-scroll-down-100.png\"\n            alt=\"scroll down\"\n            onClick={this.toTop}\n          ></img> */}\n          {this.props.messages.messages.map((item) => {\n            return (\n              <ChatMessage\n                SetChooseMod={this.props.SetChooseMod}\n                chooseMod={this.props.chooseMod}\n                addToMessageArray = {this.props.addToMessageArray}\n                key={item.id}\n                name={item.name}\n                message={item.message}\n                setForwardOn={this.props.setForwardOn }\n                setForwardOff={this.props.setForwardOff }\n                deleteMessageFromState= {this.props.deleteMessageFromState}\n                id = {this.getDate}\n                clientName={this.props.clientName}\n              />\n            );\n          })}\n          {/* {console.log(this.props)} */}\n          \n        </div>\n          \n        </Box>\n       {this.props.messagesArray.length !=0 && <ForwardCounter length={this.props.messagesArray.length}/>} \n        {this.props.forward ? <Preview setForwardOff={this.props.setForwardOff } oneMessage = {this.props.oneMessage} /> : \" \"}   \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log()\n  return {\n    messages: state.socket,\n    clientName:state.socket.clientName\n  };\n};\n\nconst mapDispatchToProps =(dispatch)=>{\n  return {\n    auth: ()=>{\n      dispatch(auth())\n    }\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatArea);\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"./input.css\";\nimport { sendMsg } from \"../chatRedux/socket.js\";\nimport { connect } from \"react-redux\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport axios from \"axios\";\nimport Preview from \"../Preview/Preview\";\n\nclass ChatInput extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.socket =  io.connect('https://nest-zuz.herokuapp.com/');\n    this.name = \"nameless\";\n    this.changeName = props.changeName;\n    this.open = false;\n    this.formName = this.name;\n    this.state = {\n      value: \"\",\n      name: \"nameless\",\n      formName: \"nameless\",\n      disabled: false,\n    };\n  }\n\n  getnick() {}\n\n  delete() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"clientName\");\n    window.location.reload(false);\n  }\n\n  handleClickOpen() {\n    this.formName = this.state.name;\n    this.open = true;\n    this.forceUpdate();\n  }\n\n  handleCloseSubmit() {\n    this.open = false;\n    if (this.state.formName !== \"\") {\n      this.setState({ name: this.state.formName });\n    }\n    this.forceUpdate();\n  }\n  handleClose() {\n    this.open = false;\n    this.forceUpdate();\n  }\n\n  getLoad() {\n    if (this.state.loading == false) {\n      return \"disabled\";\n    } else {\n      return null;\n    }\n  }\n\n  sumbitHandler(event, test) {\n    if (this.state.value != \"\") {\n      const element = document.querySelector(\".MuiBox-root\");\n      setTimeout(() => {\n        element.scrollTop = element.scrollHeight;\n      }, 100);\n      event.preventDefault();\n      this.setState({ value: \"\" });\n\n      const file = document.querySelector('input[type=\"file\"]').files[0];\n      const mes = this.state.value;\n      const func = this.props.addMessage;\n      const oneMessage = this.props.oneMessage;\n      let imageObj = [];\n      const messageArray = this.props.messagesArray;\n      //console.log(document.querySelector('input[type=\"file\"]').files);\n      let formData = new FormData();\n      Array.from(document.querySelector('input[type=\"file\"]').files).forEach(\n        (file) => {\n          formData.append(\"picture\", file);\n        }\n      );\n      if (file != undefined) {\n        this.setState({ disabled: true });\n        axios\n          .post(\"https://nest-zuz.herokuapp.com/pictures/upload\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          })\n          .then(function (result) {\n            console.log(result.data);\n            result.data.forEach((e) => {\n              imageObj.push({ path: e.path });\n            });\n            console.log(imageObj);\n            //console.log(this.props.oneMessage)\n            let quote = [];\n            if(oneMessage){\n              quote.push(oneMessage);\n            }if (messageArray){\n              quote = messageArray\n            }\n            \n\n            func(mes, { image: imageObj }, quote);\n            setTimeout(() => {\n              element.scrollTop = element.scrollHeight;\n            }, 100);\n            console.log(\"SUCCESS!!\");\n          })\n          .catch(function (ex) {\n            console.log(ex);\n          })\n          .finally(() => {\n            this.setState({ disabled: false });\n          });\n      }\n      if (file == undefined) {\n        //console.log(this.props);\n        let quote = [];\n            if(oneMessage){\n              quote.push(oneMessage);\n            }            \n            if (Object.keys(messageArray).length != 0){\n              console.log(\"ya tut\")\n              quote = messageArray\n            }\n\n        this.props.addMessage(this.state.value, {}, quote);\n      }\n      document.querySelector('input[type=\"file\"]').value = \"\";\n    } else {\n      event.preventDefault();\n      alert(\"Введите текст\");\n    }\n    //console.log(this.props)\n    this.props.forwardOff()\n    if(this.props.chooseMod){\n      this.props.SetChooseMod()\n    }\n    this.props.clearMessages()\n    \n  }\n  render() {\n    return (\n      <form id=\"send\" className=\"flex\" onSubmit={this.sumbitHandler.bind(this)}>\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Your message\"\n          className=\"root\"\n          value={this.state.value}\n          onChange={(event) => this.setState({ value: event.target.value })}\n        />\n        <input\n          accept=\"image/*\"\n          className=\"input\"\n          id=\"icon-button-file\"\n          type=\"file\"\n          multiple\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <PhotoCamera />\n          </IconButton>\n        </label>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"sumbit\"\n          className=\"button\"\n          {...this.state.disabled}\n          endIcon={<Icon>send</Icon>}\n        >\n          Send\n        </Button>\n        <IconButton color=\"primary\" onClick={this.handleClickOpen.bind(this)}>\n          <SettingsIcon color=\"primary\" />\n        </IconButton>\n        <Dialog\n          open={this.open}\n          onClose={this.handleClose.bind(this)}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Settings</DialogTitle>\n          <DialogContent>\n            <DialogContentText></DialogContentText>\n            <Button onClick={this.delete} variant=\"contained\" color=\"secondary\">\n              Delete token\n            </Button>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.messages,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (message, picture, quote) => {\n      dispatch(sendMsg({ text: message, img: picture, quote }));\n      //dispatch(auth());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatInput);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./chatroom.css\"\nfunction ChatRoom(props){\n    function randomInteger() {        \n        let rand = 1 - 0.5 + Math.random() * (1000000000 - 1 + 1);\n        return Math.round(rand);\n      }\n      \n\n    return (\n        \n        <div className = \"online\">\n            <h2>People online:</h2> \n            {props.socket.map(elem=>{\n                return <div key={randomInteger()}>{elem}</div>\n            })}\n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    \n    return {\n        socket: state.socket.roomListArray,\n        message: state.socket.messages\n  };\n};\n\n\nexport default connect(mapStateToProps)(ChatRoom)","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./auth.css\"\nimport { connect } from \"react-redux\";\n\n\nfunction Auth({ storageFunc }) {\n  console.log(storageFunc)\n    return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>Welcome</h1>{\" \"}\n      <Button className=\"button-reg\" onClick={storageFunc} variant=\"contained\" color=\"secondary\">\n        {\" \"}\n        Sign In\n      </Button>{\" \"}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    auth : state.token\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(Auth);\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport ChatArea from \"./ChatArea/ChatArea\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport Container from \"@material-ui/core/Container\";\nimport ChatRoom from \"./Chatroom/chatroom\";\nimport Auth from \"./Auth/Auth\";\nimport { connect } from \"react-redux\";\nimport { OffAuth, OnAuth, auth } from \"./chatRedux/socket\";\n\n//let storage = false;\nfunction App(props) {\n  //console.log(props)\n  function checkStorage() {\n    if (localStorage.getItem(\"token\") !== null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  const [storage, setStorage] = useState(checkStorage());\n  const [forward, setForward] = useState(false);\n  const [oneMessage, setOneMessage] = useState();\n  const [chooseMod, SetChooseMod] = useState(false);\n  const [messagesArray, SetMessagesArray] = useState([]);\n  function change() {\n    //console.log(props.url)\n    //let socket = io(\"http://localhost:3001\");\n    props.auth();\n    //console.log(socket)\n    //socket.emit(\"auth\");\n    //props.OnAuth(\"tttt\");\n    //console.log(props.token)\n    //localStorage.setItem(\"token\", \"1SDFGT\");\n    setStorage(true);\n  }\n\n  function addToMessageArray(message) {        \n    SetMessagesArray(old=>[...old, message])    \n  }\n\n  function clearMessages(){\n    SetMessagesArray([])\n  }\n\n  function deleteMessageFromState(message){    \n    /* const result = messagesArray.filter(element =>{       \n      return !(element.name === message.name && element.text === message.text)\n    }) */\n    console.log(messagesArray)\n    console.log(message)\n    const result = messagesArray.filter(element =>{       \n      return !(element.id === message.id)\n    })\n    SetMessagesArray(result);    \n  }\n\n  function forwardOn(name, text, img) {\n    setForward(true);\n    setOneMessage({ name, text, img });\n    console.log(name);\n    console.log(text);\n  }\n  function forwardOff() {\n    setForward(false);\n    setOneMessage();\n  }\n\n  function SetChooseModFunc() {\n    if (chooseMod == true) {\n      SetChooseMod(false);\n    } else {\n      SetChooseMod(true);\n    }\n  }\n\n  return (\n    <Container>\n      {storage ? (\n        <div className=\"flex relative\">\n          <div>\n            <ChatRoom />\n          </div>\n          <div style={{ width: \"100%\" }}>\n            <h1 style={{ textAlign: \"center\" }}>ChatApp</h1>\n            <ChatArea\n              forward={forward}\n              setForwardOn={forwardOn}\n              setForwardOff={forwardOff}\n              oneMessage={oneMessage}\n              chooseMod={chooseMod}\n              SetChooseMod={SetChooseModFunc}\n              addToMessageArray={addToMessageArray}\n              deleteMessageFromState={deleteMessageFromState}\n              messagesArray={messagesArray}\n            />\n            <ChatInput messagesArray={messagesArray} oneMessage={oneMessage} forwardOff={forwardOff}\n            chooseMod={chooseMod}\n            SetChooseMod={SetChooseModFunc}\n            clearMessages={clearMessages} />\n          </div>\n        </div>\n      ) : (\n        <Auth storageFunc={change} />\n      )}\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(state.socket.url)\n  return {\n    token: state.socket.token,\n    url: state.socket.socketUrl,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    OnAuth: (token) => {\n      dispatch(OnAuth(token));\n    },\n    OffAuth: () => {\n      dispatch(OffAuth());\n    },\n    auth: () => {\n      dispatch(auth());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","\nimport { createSlice} from '@reduxjs/toolkit'\n\nconst MessageSlice = createSlice({\n    name:\"messages\",\n    initialState:[{id:1,name:\"Andrew\",message:\"hi\"},\n    {id:2,name:\"Den\",message:\"hello\"},\n    {id:3,name:\"Alex\",message:\"Nice to meet you\"}],\n    reducers:{\n        addMessage: (state, action)=>{  \n        //console.log(state)              \n        state.push({\n                name:action.payload.name,\n                id:Date.now(),\n                message:action.payload.message\n            })\n        \n        }\n    }\n})\n\n\n\n\nexport const {addMessage} = MessageSlice.actions;\nexport default MessageSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport messageReducer from \"./redux\";\nimport socketReducer from \"./socket\";\nimport createSocketIoMiddleware from './middle';\nimport io from 'socket.io-client';\n\n\n\nlet socket = io('https://nest-zuz.herokuapp.com/');\n\nlet socketIoMiddleware = createSocketIoMiddleware(socket, \"socket/\");\nconst store = configureStore({\n  reducer: {\n    messages: messageReducer,\n    socket: socketReducer    \n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(socketIoMiddleware),\n});\n\nstore.subscribe(()=>{\n    //console.log('new client state', store.getState());\n  });\n  //store.dispatch({type:'socket/newMsg', data:'Hello!'});\n  //console.log('new client state', store.getState());\n\n\n\nexport default store;\n","\n\nexport default function createSocketIoMiddleware(\n  socket,\n  criteria = [],\n  {\n    execute = (action, emit, next, dispatch) => {\n      emit(eventName, action);\n      return {};\n    },\n  } = {},\n  eventName = [\n    \"roomList\",\n    \"connected\",\n    \"newUserConnected\",\n    \"userDisconnected\",\n    \"newMsg\",\n    \"accept\",\n  ],\n  \n) {\n  const emitBound = socket.emit.bind(socket);\n  return ({ dispatch,getState }) => {\n    eventName.map((value) => {\n      socket.on(value, (payload) => {\n        dispatch({ type: criteria + value, payload });\n      });\n    });\n    return (next) => (action) => {\n      if (action.type === \"socket/sendMsg\") {\n        const send = action.payload.text;\n        const picture = action.payload.img.image;\n       // console.log(action.payload.img.image);\n        let img = [];\n        //console.log(action)\n        const quote = action.payload.quote\n        const token = getState().socket.token;\n        const clientName = getState().socket.clientName\n        if (picture) {\n          picture.forEach((element) => {\n            img.push({\n              id: Math.round(1 - 0.5 + Math.random() * (1000000000 - 1 + 1)),\n              image: element,\n            });\n          });\n        }\n        //console.log(img);\n        socket.emit(\"sendMsg\", { text: send, img: img,token, clientName, quote  }); \n      }\n      if (action.type === \"socket/auth\"){\n        const token = localStorage.getItem(\"token\")\n        const name = localStorage.getItem(\"clientName\")\n        if (token!== null & name !== null ){\n          socket.emit(\"auth\", {token, clientName:name});\n        }else{\n          socket.emit(\"auth\");\n        }\n        \n        \n      }\n      return next(action);\n    };\n  };\n\n  function evaluate(action, option) {\n    if (!action || !action.type) {\n      return false;\n    }\n\n    const { type } = action;\n    let matched = false;\n    if (typeof option === \"function\") {\n      // Test function\n      matched = option(type, action);\n    } else if (typeof option === \"string\") {\n      // String prefix\n      matched = type.indexOf(option) === 0;\n    } else if (Array.isArray(option)) {\n      // Array of types\n      matched = option.some((item) => type.indexOf(item) === 0);\n    }\n    return matched;\n  }\n  function defaultExecute(action, emit, next, dispatch) {\n    // eslint-disable-line no-unused-vars\n    emit(eventName, action);\n    return next(action);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\"\nimport store from './chatRedux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}